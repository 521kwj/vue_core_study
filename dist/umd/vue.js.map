{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/oberver/array.js","../../src/oberver/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/*\n  *@params data 判断data是否是一个对象\n*/\nexport function isObject(data){\n  return typeof data === 'object' && data !== null\n}\n\n//定义属性的配置枚举方式\nexport function def(data,key,value){\n  Object.defineProperty(data,key,{\n    enumerable:false,\n    configurable:false,\n    value:value\n  })\n}","//我们要重写数组里的7个方法 pop push shift unshift reverse sort splice ,这七个方法会导致数组本身发生变化\n\nlet oldArrayMethods = Array.prototype;\n\nexport let arrayMethods = Object.create(oldArrayMethods);\nconst methods = [\n  'pop',\n  'shift',\n  'push',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\nmethods.forEach(method=>{\n  arrayMethods[method] = function(...args){\n    console.log('用户使用了push方法');\n    // this这个this指的是数组\n    const result = oldArrayMethods[method].apply(this,args); //调用原生的数组方法\n    //push unshift添加的元素有可能还是对象\n    let ob = this.__ob__;\n    let inserted;\n    switch(method){\n      case 'push':\n      case 'unshift':\n        inserted = args; //args是一个数组 arr.push({a:1},{b:2})\n        break;\n      case 'splice': //splice(0,1,{a:2},{a:3})\n        inserted = args.slice(2)\n      default:\n        break;\n\n    }\n    if(inserted){\n      ob.oberverArray(inserted) //将新增属性继续监听\n    }\n    return result;\n  }\n})","import {isObject} from '../utils/index'\nimport {arrayMethods} from './array'\nimport {def} from '../utils/index'\nclass Oberver{\n  //vue数据层次过多，需要递归去解析对象中的属性，依次增加set和get方法\n  constructor(value){\n    if(Array.isArray(value)){\n      //监测数组\n      //如果是数组的活并不会对索引进行检测，因为会导致性能问题，前端开发很少直接操作索引，一般使用push,shift等去操作数组\n      // value.__ob__ = this; //给每一个监控的对象都增加一个__ob__属性\n      def(value,'__ob__',this);\n      // Object.defineProperty(value,'__ob__',{\n      //   enumerable:false, //不可枚举\n      //   configurable:false, //不可修改\n      //   value:this\n      // })\n      value.__proto__ = arrayMethods;\n\n\n      //如果数组里放的是对象在监控\n      this.oberverArray(value)\n    }else{\n      //监测对象\n      this.walk(value)\n    }\n  }\n  oberverArray(data){\n    for(let i=0;i<data.length;i++){\n      oberver(data[i])\n    }\n  }\n  walk(data){\n    const keys = Object.keys(data);\n    keys.forEach(key=>{\n      defineReactive(data,key,data[key]);\n    })\n    // for(let i=0;i<keys.length;i++){\n    //   let key = keys[i];\n    //   let value = data[key];\n    //   // if(typeof value ==='object'){\n    //   //   this.walk(value)\n    //   // }\n    //   defineReactive(data,key,value);\n    // }\n  }\n}\nfunction defineReactive(data,key,value){\n  oberver(value);\n  Object.defineProperty(data,key,{\n    get(){\n      return value;\n    },\n    set(newVal){\n      if(newVal===value) return;\n      oberver(newVal);\n      console.log('值发生变化啦')\n      value = newVal;\n    }\n  })\n}\nexport function oberver(data){\n  const isObj = isObject(data)\n  if(!isObj){\n    return;\n  }\n  return new Oberver(data)\n}","import {oberver} from './oberver/index'\n//vm就是Vue这个类\nexport function initState(vm){\n  const opts = vm.$options;\n\n  if(opts.props){\n    initPtops(vm)\n  }\n  if(opts.methods){\n    initMethod(vm)\n  }\n  if(opts.data){\n    initData(vm)\n  }\n  if(opts.computed){\n    initComputed(vm)\n  }\n  if(opts.watch){\n    initWatch(vm)\n  }\n}\n\nfunction initPtops(vm){\n\n}\n\nfunction initMethod(vm){\n\n}\nfunction initData(vm){\n  //数据初始化工作\n  let data = vm.$options.data;\n  data = vm._data = typeof data === 'function' ? data.call(this) : data;\n  //数据劫持，用户改变数据，我希望可以得到通知=>刷新页面\n  oberver(data)\n}\n\nfunction initComputed(vm){\n\n}\n\nfunction initWatch(vm){\n\n}","import {initState} from './state'\n//在原型上添加一个init方法\nexport  function initMixin(Vue){\n  //初始化流程\n  Vue.prototype._init = function(options){\n    const vm  = this;\n    vm.$options = options;\n\n    initState(vm)\n  }\n}","//vue的核心代码\nimport {initMixin} from './init'\nfunction Vue(options){\n  this._init(options)\n}\ninitMixin(Vue)\nexport default Vue;"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","args","result","apply","ob","__ob__","inserted","slice","oberverArray","Oberver","isArray","__proto__","walk","i","length","oberver","keys","defineReactive","get","set","newVal","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}